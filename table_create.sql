-- =====================================================================
-- ARQUIVO: cria_tabelas.sql
-- DESCRIÇÃO: Script para criação de todas as tabelas do banco de dados
--            da clínica. Inclui todas as constraints e colunas
--            de identidade para auto-incremento.
-- BANCO DE DADOS: Oracle
-- =====================================================================

-- -----------------------------------------------------
-- Limpeza de Tabelas (Executar para recriar o banco)
-- -----------------------------------------------------
DROP TABLE DIAGNOSTICO CASCADE CONSTRAINTS;
DROP TABLE LAUDO CASCADE CONSTRAINTS;
DROP TABLE REALIZACAO_EXAME CASCADE CONSTRAINTS;
DROP TABLE ALOCACAO_EQUIPAMENTO CASCADE CONSTRAINTS;
DROP TABLE AGENDAMENTO CASCADE CONSTRAINTS;
DROP TABLE MEDICO_ESPECIALIDADE CASCADE CONSTRAINTS;
DROP TABLE PESSOA_TELEFONE CASCADE CONSTRAINTS;
DROP TABLE SALA_EXAME CASCADE CONSTRAINTS;
DROP TABLE TECNICO CASCADE CONSTRAINTS;
DROP TABLE MEDICO CASCADE CONSTRAINTS;
DROP TABLE PACIENTE CASCADE CONSTRAINTS;
DROP TABLE FUNCIONARIO CASCADE CONSTRAINTS;
DROP TABLE PESSOA CASCADE CONSTRAINTS;
DROP TABLE CLINICA CASCADE CONSTRAINTS;
DROP TABLE ESPECIALIDADE CASCADE CONSTRAINTS;
DROP TABLE EQUIPAMENTO CASCADE CONSTRAINTS;
DROP TABLE EXAME CASCADE CONSTRAINTS;


-- -----------------------------------------------------
-- Tabela PESSOA (Entidade base para pacientes, médicos, etc.)
-- -----------------------------------------------------
CREATE TABLE PESSOA (
    CPF VARCHAR2(11 CHAR) NOT NULL,
    Nome VARCHAR2(255 CHAR) NOT NULL,
    Endereco_Rua VARCHAR2(255 CHAR),
    Endereco_Numero VARCHAR2(10 CHAR),
    Endereco_Bairro VARCHAR2(100 CHAR),
    Endereco_Cidade VARCHAR2(100 CHAR),
    Endereco_CEP VARCHAR2(8 CHAR),
    Email VARCHAR2(255 CHAR),
    Data_Nascimento DATE,
    Sexo VARCHAR2(1 CHAR),
    CONSTRAINT pk_pessoa PRIMARY KEY (CPF),
    CONSTRAINT uq_pessoa_email UNIQUE (Email),
    CONSTRAINT chk_pessoa_sexo CHECK (Sexo IN ('M', 'F', 'O')) -- CLÁUSULA CHECK
);

-- -----------------------------------------------------
-- Tabelas de Especialização de PESSOA
-- -----------------------------------------------------
CREATE TABLE PACIENTE (
    CPF VARCHAR2(11 CHAR) NOT NULL,
    Numero_Cartao VARCHAR2(50 CHAR),
    CONSTRAINT pk_paciente PRIMARY KEY (CPF),
    CONSTRAINT fk_paciente_pessoa FOREIGN KEY (CPF) REFERENCES PESSOA(CPF)
);

CREATE TABLE FUNCIONARIO (
    CPF VARCHAR2(11 CHAR) NOT NULL,
    Matricula VARCHAR2(20 CHAR) NOT NULL,
    Data_Admissao DATE NOT NULL,
    CPF_Supervisor VARCHAR2(11 CHAR),
    CONSTRAINT pk_funcionario PRIMARY KEY (CPF),
    CONSTRAINT uq_funcionario_matricula UNIQUE (Matricula),
    CONSTRAINT fk_funcionario_pessoa FOREIGN KEY (CPF) REFERENCES PESSOA(CPF),
    CONSTRAINT fk_funcionario_supervisor FOREIGN KEY (CPF_Supervisor) REFERENCES FUNCIONARIO(CPF)
);

CREATE TABLE MEDICO (
    CPF VARCHAR2(11 CHAR) NOT NULL,
    CRM VARCHAR2(20 CHAR) NOT NULL,
    CONSTRAINT pk_medico PRIMARY KEY (CPF),
    CONSTRAINT uq_medico_crm UNIQUE (CRM),
    CONSTRAINT fk_medico_funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);

-- Tabela TECNICO (criada a partir da necessidade em REALIZACAO_EXAME)
CREATE TABLE TECNICO (
    CPF VARCHAR2(11 CHAR) NOT NULL,
    Certificacao VARCHAR2(50 CHAR), -- Ex: Registro no conselho de técnicos
    CONSTRAINT pk_tecnico PRIMARY KEY (CPF),
    CONSTRAINT fk_tecnico_funcionario FOREIGN KEY (CPF) REFERENCES FUNCIONARIO(CPF)
);


-- -----------------------------------------------------
-- Tabela PESSOA_TELEFONE (Relacionamento N:M)
-- -----------------------------------------------------
CREATE TABLE PESSOA_TELEFONE (
    CPF VARCHAR2(11 CHAR) NOT NULL,
    Telefone VARCHAR2(15 CHAR) NOT NULL,
    CONSTRAINT pk_pessoa_telefone PRIMARY KEY (CPF, Telefone),
    CONSTRAINT fk_telefone_pessoa FOREIGN KEY (CPF) REFERENCES PESSOA(CPF)
);

-- -----------------------------------------------------
-- Tabelas de Domínio e Entidades Independentes
-- -----------------------------------------------------
CREATE TABLE ESPECIALIDADE (
    Codigo INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    Nome VARCHAR2(100 CHAR) NOT NULL,
    CONSTRAINT pk_especialidade PRIMARY KEY (Codigo),
    CONSTRAINT uq_especialidade_nome UNIQUE (Nome)
);

CREATE TABLE CLINICA (
    Codigo INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    Nome VARCHAR2(100 CHAR) NOT NULL,
    Endereco VARCHAR2(255 CHAR),
    CONSTRAINT pk_clinica PRIMARY KEY (Codigo)
);

CREATE TABLE EQUIPAMENTO (
    Numero_Serie VARCHAR2(50 CHAR) NOT NULL,
    Tipo_Equipamento VARCHAR2(100 CHAR) NOT NULL,
    CONSTRAINT pk_equipamento PRIMARY KEY (Numero_Serie)
);

CREATE TABLE EXAME (
    Codigo INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    Nome VARCHAR2(50 CHAR) NOT NULL,
    Tipo VARCHAR2(50 CHAR), -- Laboratorial, Imagem, etc.
    CONSTRAINT pk_exame PRIMARY KEY (Codigo)
);

-- -----------------------------------------------------
-- Tabelas de Relacionamento e Entidades Fracas
-- -----------------------------------------------------
CREATE TABLE MEDICO_ESPECIALIDADE (
    CPF_Medico VARCHAR2(11 CHAR) NOT NULL,
    Codigo_Especialidade INT NOT NULL,
    Data_Obtencao DATE,
    CONSTRAINT pk_medico_especialidade PRIMARY KEY (CPF_Medico, Codigo_Especialidade),
    CONSTRAINT fk_mesp_medico FOREIGN KEY (CPF_Medico) REFERENCES MEDICO(CPF),
    CONSTRAINT fk_mesp_especialidade FOREIGN KEY (Codigo_Especialidade) REFERENCES ESPECIALIDADE(Codigo)
);

CREATE TABLE SALA_EXAME ( -- Entidade Fraca
    Codigo_Clinica INT NOT NULL,
    Numero_Sala INT NOT NULL,
    CONSTRAINT pk_sala_exame PRIMARY KEY (Codigo_Clinica, Numero_Sala),
    CONSTRAINT fk_sala_clinica FOREIGN KEY (Codigo_Clinica) REFERENCES CLINICA(Codigo)
);

CREATE TABLE ALOCACAO_EQUIPAMENTO (
    Numero_Serie_Equipamento VARCHAR2(50 CHAR) NOT NULL,
    Codigo_Clinica INT NOT NULL,
    Numero_Sala INT NOT NULL,
    Data_Hora_Inicio TIMESTAMP NOT NULL,
    Data_Hora_Termino TIMESTAMP,
    CONSTRAINT pk_alocacao PRIMARY KEY (Numero_Serie_Equipamento, Codigo_Clinica, Numero_Sala, Data_Hora_Inicio),
    CONSTRAINT fk_alocacao_equipamento FOREIGN KEY (Numero_Serie_Equipamento) REFERENCES EQUIPAMENTO(Numero_Serie),
    CONSTRAINT fk_alocacao_sala FOREIGN KEY (Codigo_Clinica, Numero_Sala) REFERENCES SALA_EXAME(Codigo_Clinica, Numero_Sala)
);

-- -----------------------------------------------------
-- Tabelas Centrais do Processo de Exame
-- -----------------------------------------------------
CREATE TABLE AGENDAMENTO (
    Codigo INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, -- CLÁUSULA DE AUTO_INCREMENT
    CPF_Paciente VARCHAR2(11 CHAR) NOT NULL,
    Codigo_Exame INT NOT NULL,
    Data_Hora_Agendada TIMESTAMP NOT NULL,
    Prioridade VARCHAR2(20 CHAR) DEFAULT 'Normal' NOT NULL,
    Status VARCHAR2(20 CHAR) NOT NULL,
    CONSTRAINT pk_agendamento PRIMARY KEY (Codigo),
    CONSTRAINT fk_agendamento_paciente FOREIGN KEY (CPF_Paciente) REFERENCES PACIENTE(CPF),
    CONSTRAINT fk_agendamento_exame FOREIGN KEY (Codigo_Exame) REFERENCES EXAME(Codigo),
    CONSTRAINT chk_agendamento_prioridade CHECK (Prioridade IN ('Normal', 'Urgente', 'Emergência')),
    CONSTRAINT chk_agendamento_status CHECK (Status IN ('Agendado', 'Realizado', 'Cancelado', 'Aguardando'))
);

CREATE TABLE REALIZACAO_EXAME (
    Codigo_Laudo INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    Codigo_Agendamento INT NOT NULL,
    CPF_Tecnico VARCHAR2(11 CHAR) NOT NULL,
    Numero_Serie_Equipamento VARCHAR2(50 CHAR),
    Codigo_Clinica INT NOT NULL,
    Numero_Sala INT NOT NULL,
    Data_Hora_Execucao TIMESTAMP NOT NULL,
    Observacoes CLOB, -- Usando CLOB para textos longos
    CONSTRAINT pk_realizacao_exame PRIMARY KEY (Codigo_Laudo),
    CONSTRAINT uq_realizacao_agendamento UNIQUE (Codigo_Agendamento),
    CONSTRAINT fk_realizacao_agendamento FOREIGN KEY (Codigo_Agendamento) REFERENCES AGENDAMENTO(Codigo),
    CONSTRAINT fk_realizacao_tecnico FOREIGN KEY (CPF_Tecnico) REFERENCES TECNICO(CPF),
    CONSTRAINT fk_realizacao_equipamento FOREIGN KEY (Numero_Serie_Equipamento) REFERENCES EQUIPAMENTO(Numero_Serie),
    CONSTRAINT fk_realizacao_sala FOREIGN KEY (Codigo_Clinica, Numero_Sala) REFERENCES SALA_EXAME(Codigo_Clinica, Numero_Sala)
);

CREATE TABLE LAUDO (
    Codigo INT NOT NULL,
    Data_Hora TIMESTAMP NOT NULL,
    Resultado CLOB NOT NULL,
    Status VARCHAR2(20 CHAR) NOT NULL,
    CONSTRAINT pk_laudo PRIMARY KEY (Codigo),
    CONSTRAINT fk_laudo_realizacao FOREIGN KEY (Codigo) REFERENCES REALIZACAO_EXAME(Codigo_Laudo), -- Relacionamento 1:1
    CONSTRAINT chk_laudo_status CHECK (Status IN ('Emitido', 'Em análise', 'Revisão pendente'))
);

CREATE TABLE DIAGNOSTICO (
    Codigo INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    Codigo_Laudo INT NOT NULL,
    CPF_Medico VARCHAR2(11 CHAR) NOT NULL,
    Data_Hora TIMESTAMP NOT NULL,
    Resultado CLOB NOT NULL,
    Status VARCHAR2(20 CHAR),
    CONSTRAINT pk_diagnostico PRIMARY KEY (Codigo),
    CONSTRAINT uq_diagnostico_laudo UNIQUE (Codigo_Laudo),
    CONSTRAINT fk_diagnostico_laudo FOREIGN KEY (Codigo_Laudo) REFERENCES LAUDO(Codigo),
    CONSTRAINT fk_diagnostico_medico FOREIGN KEY (CPF_Medico) REFERENCES MEDICO(CPF),
    CONSTRAINT chk_diagnostico_status CHECK (Status IN ('Preliminar', 'Final', 'Segunda opinião'))
);